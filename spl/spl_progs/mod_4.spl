//device manager module
alias functionNum R1;
alias currentPID R2;
alias pageNum R3;
alias blockNum R4;

//disk load
if(functionNum==2)
then
    multipush(R1, R2, R3, R4);
		R1 = 3;
		R2 = currentPID;
		call MOD_0;
    multipop(R1, R2, R3, R4);
    [DISK_STATUS_TABLE + 1] = 0;
    [DISK_STATUS_TABLE + 2] = pageNum;
    [DISK_STATUS_TABLE + 3] = blockNum;
		load(pageNum,blockNum);
    [PROCESS_TABLE + currentPID*16 + 4] = WAIT_DISK;
		multipush(R1, R2, R3, R4);
    call MOD_5;
		multipop(R1, R2, R3, R4);
    return;
endif; 		

//terminal write
if(functionNum==3)
then
    multipush(R1, R2, R3);
    R1=8;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    call MOD_0;
    multipop(R1, R2, R3);
    print R3;
    multipush(R1, R2, R3);
    R1=9;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    call MOD_0;
    multipop(R1, R2, R3);
    return;
endif; 

//terminal read
if(functionNum==4)
then
    multipush(R1, R2, R3);
    R1=8;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    call MOD_0;
    multipop(R1, R2, R3);
    read;
    [PROCESS_TABLE+currentPID*16+4]=WAIT_TERMINAL;
    multipush(R1, R2, R3);
    call MOD_5;
    multipop(R1, R2, R3);
    [[PTBR + (2*R3)/512]*512 + R3%512]=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 8];
    return;
endif;  